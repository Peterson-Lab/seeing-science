name: Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CORS_ORIGIN: ${{ secrets.CORS_ORIGIN }}
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  DOMAIN: ${{ secrets.DOMAIN }}
  JWT_COOKIE_NAME: ${{ secrets.JWT_COOKIE_NAME }}
  JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
  NODE_ENV: ${{ secrets.NODE_ENV }}
  PORT: ${{ secrets.PORT }}
  ROOT_EMAIL: ${{ secrets.ROOT_EMAIL }}
  ROOT_PASSWORD: ${{ secrets.ROOT_PASSWORD }}
  ROOT_USERNAME: ${{ secrets.ROOT_USERNAME }}
  SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
  CORS_ORIGIN_VERCEL: ${{ secrets.CORS_ORIGIN_VERCEL }}

jobs:
  build:
    name: Build
    environment: Test
    strategy:
      matrix:
        node-version: [15.x]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Node.js
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install -g yarn
      - name: yarn install, gen and build
        run: |
          yarn 
          yarn gen
          yarn build
  test:
    name: Test
    environment: Test
    strategy:
      matrix:
        node-version: [15.x]
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: seeing-science
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v2
      - name: Node.js
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install -g yarn
      - name: yarn install, gen, migrate, and test
        run: |
          yarn 
          yarn gen
          yarn migrate
          yarn test
